/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 17 17 29 38 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38 12 24 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
            hold-trigger-on-release;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
        };

        Copy_Cut: Copy_Cut {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_CUT";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
        };

        Paste_Ins: Paste_Ins {
            compatible = "zmk,behavior-tap-dance";
            label = "PASTE_INS";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>, <&kp INS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };

        bluetooth {
            bindings = <&mo 6>;
            key-positions = <39 40 41>;
        };

        sleep {
            bindings = <&kp K_SLEEP>;
            key-positions = <0 11>;
        };

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <39 40>;
            layers = <0>;
        };

        move_win {
            bindings = <&kp LG(LS(LEFT_ARROW))>;
            key-positions = <38 39>;
        };

        power {
            bindings = <&kp K_POWER>;
            key-positions = <24 12 0>;
        };

        qwerty {
            bindings = <&to 8>;
            key-positions = <36 37 38>;
            layers = <0>;
        };

        workman {
            bindings = <&to 0>;
            key-positions = <36 37 38>;
            layers = <8>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <11 35>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&Paste_Ins  &kp Q            &kp D            &kp R         &kp W              &kp B        &kp J        &kp F               &kp U         &kp P             &kp SQT           &Paste_Ins
&Copy_Cut   &HML LEFT_WIN A  &HML LEFT_ALT S  &HML LCTRL H  &HML LEFT_SHIFT T  &kp G        &kp Y        &HMR RIGHT_SHIFT N  &HMR RCTRL E  &HMR RIGHT_ALT O  &HMR RIGHT_WIN I  &Copy_Cut
&kp LC(Z)   &kp Z            &kp X            &kp M         &kp C              &kp V        &kp K        &kp L               &kp COMMA     &kp DOT           &kp FSLH          &kp RC(Y)
                                              &lt 7 ESCAPE  &lt 3 SPACE        &lt 5 TAB    &lt 2 ENTER  &lt 1 BACKSPACE     &lt 4 DELETE
            >;

            label = "workman";
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &none  &none            &none      &none          &none          &none
&none  &kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_WIN  &none
&none  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &none  &kp SPACE        &kp COMMA  &kp PERIOD     &kp SLASH      &none
                                       &kp DOT       &kp N0        &kp MINUS            &none  &none            &none
            >;

            label = "number";
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp LBRC   &kp AMPS         &kp ASTERISK  &kp LPAR   &kp RBRC     &none  &none            &none      &none          &none          &none
&none  &kp COLON  &kp DLLR         &kp PRCNT     &kp CARET  &kp PLUS     &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_WIN  &none
&none  &kp TILDE  &kp EXCLAMATION  &kp AT        &kp HASH   &kp PIPE     &none  &none            &none      &none          &none          &none
                                   &kp LPAR      &kp RPAR   &kp UNDER    &none  &none            &none
            >;

            label = "symbol";
        };

        nav {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp LC(Y)     &kp LC(V)      &kp RC(C)       &kp RC(X)     &kp LC(Z)        &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp CAPSLOCK  &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none  &none         &none         &none      &kp SPACE       &none    &kp INS       &kp HOME       &kp PAGE_DOWN   &kp PG_UP     &kp END          &none
                                   &none      &none           &none    &kp ENTER     &kp BACKSPACE  &kp DELETE
            >;

            label = "navigate";
        };

        fun {
            bindings = <
&none   &kp F12  &kp F7  &kp F8      &kp F9     &kp PRINTSCREEN    &none  &none            &none      &none          &none          &none
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_WIN  &none
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &none  &none            &kp SPACE  &none          &none          &none
                         &kp K_MENU  &kp SPACE  &lt 5 TAB          &none  &none            &none
            >;

            label = "function";
        };

        mouse {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp RC(Y)  &kp RC(V)       &kp RC(C)       &kp LC(X)     &kp LC(Z)        &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none  &none         &none         &none      &none           &none    &none      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none
                                   &none      &none           &none    &mkp LCLK  &mkp RCLK       &mkp MCLK
            >;

            label = "mouse";
        };

        bluetooth {
            bindings = <
&none       &none         &none         &none         &none         &none             &none  &none  &none  &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL    &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none             &none  &none  &none  &none  &none  &none
                                        &none         &none         &none             &none  &none  &none
            >;

            label = "bluetooth";
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none    &none       &none             &none         &none            &none       &none
&none  &none  &none  &none  &none  &none    &none       &kp C_PREVIOUS    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT  &none
&none  &none  &none  &none  &none  &none    &none       &none             &none         &none            &none       &none
                     &none  &none  &none    &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE
            >;

            label = "media";
        };

        qwerty {
            label = "qwerty";
            bindings = <
&kp LEFT_ALT    &kp Q  &kp W  &kp E       &kp R      &kp T      &kp Y        &kp U               &kp I         &kp O             &kp P          &kp RIGHT_ALT
&kp LCTRL       &kp A  &kp S  &kp D       &kp F      &kp G      &kp H        &HMR RIGHT_SHIFT J  &HMR RCTRL K  &HMR RIGHT_ALT L  &kp RIGHT_WIN  &kp RCTRL
&kp LEFT_SHIFT  &kp Z  &kp X  &kp M       &kp C      &kp V      &kp N        &kp M               &kp COMMA     &kp DOT           &kp FSLH       &kp RIGHT_SHIFT
                              &kp ESCAPE  &kp SPACE  &kp TAB    &lt 2 ENTER  &lt 1 BACKSPACE     &lt 4 DELETE
            >;
        };
    };
};
